{"blog_posts": [
    {
        "id": "2012-05-05-Ember_tree",
        "post_title": "Implementing a Custom Tree Model in Ember",
        "post_date": "2012-05-05",
        "post_short_intro": "Explaining the Client-side MVC model and how it differs from the server-side MVC model",
        "post_long_intro": "We have had a number of very good server-side frameworks for building Web 2.0 Internet applications for a number of years, and they all helped spike the AJAX “revolution” for the Web. AJAX finally gave us a genuine dynamic feel to the Web, which was a very welcomed change for the users. However, everything still felt a lot like Web 1.0 on the server side, which there are two main reasons for."
    },
    {
        "id": "2012-05-14-when_did_agile_swallow_pragmatic",
        "post_title": "When Did Agile Swallow Pragmatic ?",
        "post_date": "2012-05-14",
        "post_short_intro": "My question, is simply this: When did Agile grow into a behemoth that swallowed the ability to be pragmatic in an Agile Team? ",
        "post_long_intro": "The Agile train have arrived and it has taken over from it waterfall cousin. My question, though, is simply this: When did Agile grow into a behemoth that swallowed the ability to be pragmatic in an Agile Team?"
    },
    {
        "id": "2012-09-03-Combining_Ember_js_with_Netty",
        "post_title": "Combining Ember.js with Netty",
        "post_date": "2012-09-03",
        "post_short_intro": "Combining Ember.js with Netty ",
        "post_long_intro": "This blog post is split up into three parts. The first part consists of a short introduction, while the second and third part will talk about the client-side and the server-side respectably. The last part will also talk about one way in which it is possible to utilize the server-side application in order to keep your development, test and production versions of your client-side app the same without needing the prepackage the JavaScript code."
    }
]
}